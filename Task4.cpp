// Task4.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>//									
void func1();  // 1 прога			  
void func2();// 2 прога				 
void func3();  // 3 прога			
void func4();// 4 прога				
void func5();  //5 прога			
void func6();// 6 прога				
void func7();  // 7 прога

int main()
{


	setlocale(LC_ALL, "Rus");
	
										   
	
	printf("1) (1) - Напишите функцию, которая принимает параметр – натуральное число N – и выводит на экран из звездочек рамку квадрата со стороной N.");
	printf("\n\n2) (1) - Написать функцию с тремя целыми параметрами m, n, d, изображающую в текстовом окне терминала при помощи символов * рамку размером m на n толщиной d");
	printf("\n\n3) (2) - * Написать функцию с одним целым параметром, изображающую в текстовом окне терминала окружность заданного радиуса при помощи символов *.");
	printf("\n\n4) (1) - Написать функцию, которая определяет количество разрядов введенного целого числа.");
	printf("\n\n5) (2) - Определите НОК трех натуральных чисел. Использовать функции НОД(a, b) и НОК(a, b)\nУказание: НОК(a, b) = a * b / НОД(a, b).");
	printf("\n\n6) (2) - Найти сумму двух дробей a/b и c/d. Ответ записать обыкновенной дробью.\nУказание: написать функцию cancel(a, b, p, q), которая дробь a / b приводит к несократимому виду p / q .");
	printf("\n\n7) (2) - Напишите функцию, которая определяет является ли первый принимаемый параметр числом, равным возведению некоторого другого числа в степень равную второму параметру.\nНапример\nfunc(81, 4) ==> 3  81 = 3 в степени 4\nfunc(81, 2) ==> 9  81 = 9 в степени 2\nfunc(16, 4) ==> 2  16 = 2 в степени 4\nfunc(27, 4) ==> без вариантов");
	printf("\n\n0) EXIT");
	int q=-1;
	while (q != 0) {
		printf("\n\nВведите номер задания: ");
		scanf_s("%d",&q);
		switch (q) {

		case 1:
			func1();	// 1 прога
			break;


		case 2:
			func2();	//2 прога
			break;

		case 3:
			func3();	//3 прога
			break;


		case 4:
			func4();	//4 прога
			break;

		case 5:
			func5();	//5 прога
			break;


		case 6:
			func6();	//6 прога
			break;

		case 7:
			func7();	//7 прога 
			break;

		
//						*
//		*			   * *			  *           *					  *
//		*  *						 * *         * *				 * *
//		*    *			*		    *   *       *   *				*   *
//		*      *		*		   *     *     *     *			   *     *
//		*      *		*		  *       *   *       *			  * * * * *
//		* *   *			*	   	 *         * *         *		 *         *
//		*   *			*	 	*           *           *		*           *
			
		}
	}
	return 0;
}

//-------------------------------------------------------------------------------------------------------
void func1() { // прога 1
	int q;
	printf("Введите Ваше число ");
	scanf_s("%d", &q);

	for (int i = 0; i < q; i++)
	{
		printf("\n");
		for (int j = 0; j < q; j++)
		{
			printf(" * ");
		}
		
	}

}


void func2() { //2 прога
	int q,w,e;
	printf("\nВведите ширину поля ");
	scanf_s("%d", &q);
	printf("\nВведите высоту поля ");
	scanf_s("%d", &w);
	printf("\nВведите глубину поля ");
	scanf_s("%d", &e);
	for (int i = 0; i < e; i++)
	{
		printf("\n\n");
		for (int j = 0; j < w; j++)
		{
			printf("\n");
			for (int r = 0; r < q; r++)
			{
				printf(" * ");
			}
		}

	}
}
void func3() { //прога 3
	double r, y1, y2;
	printf( "Введите радиус: ");
	scanf_s("%lf", &r);
	printf("\n");
	for (int i = 1; i <= 2 * r; i++)
	{
		for (int j = 1; j <= 2 * r; j++)
		{
			y1 = r + sqrt(r * r - pow(r - j, 2));
			y2 = r - sqrt(r * r - pow(r - j, 2));
			if (i > y2 && i < y1) { 
				printf("**"); 
			}
			else { 
				printf("  "); 
			}
		}
		printf("\n");
	}

}
void func4() { //прога 4
	int q;
	int n = 0;
	printf("Введите число (до 9 знаков!): ");
	scanf_s("%d", &q);

	if(q==0){
		printf("ответ 0");
	}
	else {
		while (q > 9)
		{
			q = q / 10;
			n++;
		}

		printf("ответ %d", n + 1);
	}
}

void func5() {//5 прога
	int q,w,e;
	printf("\nВведите первое число: ");
	scanf_s("%d", &q);
	printf("\nВведите второе число: ");
	scanf_s("%d", &w);
	printf("\nВведите третье число: ");
	scanf_s("%d", &e);

	int del=1;
	for (int i = 1; i <= q; i++)
	{
		
		if (q % i == 0 && w % i == 0 )
		{
			del = i;
		}

	}
	w = q * w  / del;
	for (int i = 1; i <= w; i++)
	{

		if (w % i == 0 && e % i == 0)
		{
			del = i;
		}

	}

	del = w * e / del;
	printf("\nНОК равен %d", del);

}

void func6() {// 6 прога
	int q,w,e,r;
	int del=1;
	printf("\nВведите числитель первого числа: ");
	scanf_s("%d", &q);
	printf("\nВведите знаменатель первого числа: ");
	scanf_s("%d", &w);
	printf("\nВведите числитель второго числа: ");
	scanf_s("%d", &e);
	printf("\nВведите знаменатель второго числа: ");
	scanf_s("%d", &r);


	for (int i = 1; i <= w; i++)  //находим нод для первых 2 чисел
	{

		if (w % i == 0 && r % i == 0 )
		{
			del = i;
		}

	}


	q = (q * r / del) + (e * w / del);
	w = r * w / del;
	del = 1;
	for (int i = 1; i <= q; i++)  //находим нод  нока перевого и второго числа и третьего числа 
	{

		if (q % i == 0 && w % i == 0)
		{
			del = i;
		}

	}
	printf("Ответ %d/%d",q/del,w/del); //окончательный нок
}
void func7() { //7 прога
	int q,w;
	printf("\nВведите первое число: ");
	scanf_s("%d", &q);
	printf("\nВведите второй число: ");
	scanf_s("%d", &w);

	for (int i = 1; i < q; i++) {

		if (pow(i, w) == q) {

			q = i;
			w = i;
		}

	}

	if (q == w) {
	printf("Ваше число %d", q);
	}
	else {
		printf("Нет такого числа");
	}

	
}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
